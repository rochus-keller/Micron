// Generated by compiler  on 2025-06-03T00:36:18

module Fibonacci
  source "/home/me/Entwicklung/Modules/Micron/testcases/Fibonacci.mic"
  procedure line 3 calc(n: int32):int32
  var line 4 a: int32; b: int32; 
  begin
    line 6
    if
      ldarg_0
      ldc_i4_1
      cgt
    then
      line 7
      ldarg_0
      ldc_i4_1
      sub
      call calc
      stloc_0
      line 8
      ldarg_0
      ldc_i4_2
      sub
      call calc
      stloc_1
      line 9
      ldloc_0
      ldloc_1
      add
      ret
      line 10
    else
      if
        ldarg_0
        ldc_i4_0
        ceq
      then
        line 11
        ldc_i4_0
        ret
        line 12
      else
        line 13
        ldc_i4_1
        ret
      end
      line 14
    end
    line 15
  end calc
  var line 17 res: int32
  procedure line 18 begin$() init 
  begin
    line 19
    ldstr "Fibonacci start"
    call MIC$!printStr
    ldc_i4_s 10
    call MIC$!printCh
    line 20
    ldc_i4_s 21
    call calc
    stvar res
    line 21
    ldvar res
    conv_i8
    call MIC$!printI8
    ldc_i4_s 10
    call MIC$!printCh
    line 22
    ldvar res
    ldc_i4 10946
    ceq
    ldc_i4_s 22
    ldstr "/home/me/Entwicklung/Modules/Micron/testcases/Fibonacci.mic"
    call MIC$!assert
    line 23
    ldstr "Fibonacci done"
    call MIC$!printStr
    ldc_i4_s 10
    call MIC$!printCh
    line 24
  end begin$
end line 18 Fibonacci
