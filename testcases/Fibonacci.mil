// Generated by MicCompiler  on 2025-05-15T01:02:07

module Fibonacci
  procedure calc(n: int32):int32
  var a: int32; b: int32; 
  begin
    if
      ldarg_0
      ldc_i4_1
      cgt
    then
      ldloca_s 0
      ldarg_0
      ldc_i4_1
      sub
      call calc
      stind_i4
      ldloca_s 1
      ldarg_0
      ldc_i4_2
      sub
      call calc
      stind_i4
      ldloc_0
      ldloc_1
      add
      ret
    else
      if
        ldarg_0
        ldc_i4_0
        ceq
      then
        ldc_i4_0
        ret
      else
        ldc_i4_1
        ret
      end
    end
  end calc
  var res: int32
  procedure begin$() init 
  begin
    ldstr "Fibonacci start"
    call MIC$!printStr
    ldc_i4_s 10
    call MIC$!printCh
    ldvara res
    ldc_i4_s 21
    call calc
    stind_i4
    ldvar res
    conv_i8
    call MIC$!printI8
    ldc_i4_s 10
    call MIC$!printCh
    ldvar res
    ldc_i4 10946
    ceq
    ldc_i4_s 22
    ldstr "/home/me/Entwicklung/Modules/Micron/testcases/Fibonacci.mic"
    call MIC$!assert
    ldstr "Fibonacci done"
    call MIC$!printStr
    ldc_i4_s 10
    call MIC$!printCh
  end begin$
end Fibonacci
