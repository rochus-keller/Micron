// Generated by compiler  on 2025-06-15T17:09:59

module Procs1
  procedure Proc1():int32
  var i: int32; 
  begin
    ldc_i4_1
    stloc_0
    ldc_i4_2
    stloc_0
    ldloc_0
    ret
    ldc_i4_3
    stloc_0
    ldc_i4_4
    stloc_0
  end Proc1
  procedure Proc2$Proc3(a: int32; b: int32):int32
  begin
    ldarg_0
    ldarg_1
    add
    ret
  end Proc2$Proc3
  procedure Proc2():int32
  var i: int32; 
  begin
    ldc_i4_s 40
    ldc_i4_2
    call Proc2$Proc3
    stloc_0
    ldloc_0
    ret
  end Proc2
  type _$1* = array of char
  type _$2* = pointer to _$1
  procedure Proc3(str: _$2)
  begin
    ldarg_0
    call MIC$!printStr
    ldc_i4_s 10
    call MIC$!printCh
  end Proc3
  var x: int32
  type _$3* = pointer to int32
  procedure Proc4(x: _$3)
  begin
    ldarg_0
    ldc_i4_s 13
    stind_i4
  end Proc4
  type _$4* = array 32 of char
  procedure Proc5(str: _$4)
  begin
    ldarga_s 0
    call MIC$!printStr
    ldc_i4_s 10
    call MIC$!printCh
  end Proc5
  type _$5* = array 30 of char
  var str: _$5
  type _$6 = array 3 of char
  var str2: _$6
  type _$7* = pointer to char
  var str3: _$7
  type _$8* = array of char
  type _$9* = pointer to _$8
  var str4: _$9
  type _$10* = pointer to _$5
  type _$11* = pointer to int32
  procedure begin$() init 
  begin
    ldstr "Procs1 start"
    call MIC$!printStr
    ldc_i4_s 10
    call MIC$!printCh
    call Proc1
    conv_i8
    call MIC$!printI8
    ldc_i4_s 10
    call MIC$!printCh
    call Proc2
    conv_i8
    call MIC$!printI8
    ldc_i4_s 10
    call MIC$!printCh
    ldstr "Test"
    call Proc3
    ldstr "Test"
    ldind _$4
    call Proc5
    ldvara str
    ldstr "Test"
    strcpy
    ldvara str
    stvar str4
    ldc_i4_s 12
    stvar x
    ldvara x
    call Proc4
    ldvar x
    conv_i8
    call MIC$!printI8
    ldc_i4_s 10
    call MIC$!printCh
    ldstr "Procs1 done"
    call MIC$!printStr
    ldc_i4_s 10
    call MIC$!printCh
  end begin$
end Procs1
