// Generated by compiler  on 2025-06-03T02:15:51

module MathL
  source "/home/me/Entwicklung/Modules/Micron/oakwood/MathL.mic"
  procedure line 6 sqrt(x: float64):float64 extern 
  procedure line 7 power(x: float64; base: float64):float64 extern 
  procedure line 8 exp(x: float64):float64 extern 
  procedure line 9 ln(x: float64):float64 extern 
  procedure line 10 log(x: float64; base: float64):float64 extern 
  procedure line 11 round(x: float64):float64 extern 
  procedure line 12 sin(x: float64):float64 extern 
  procedure line 13 cos(x: float64):float64 extern 
  procedure line 14 tan(x: float64):float64 extern 
  procedure line 15 arcsin(x: float64):float64 extern 
  procedure line 16 arccos(x: float64):float64 extern 
  procedure line 17 arctan(x: float64):float64 extern 
  procedure line 18 arctan2(x: float64; y: float64):float64 extern 
  procedure line 19 sinh(x: float64):float64 extern 
  procedure line 20 cosh(x: float64):float64 extern 
  procedure line 21 tanh(x: float64):float64 extern 
  procedure line 22 arcsinh(x: float64):float64 extern 
  procedure line 23 arccosh(x: float64):float64 extern 
  procedure line 24 arctanh(x: float64):float64 extern 
end line 25 MathL

// Generated by compiler  on 2025-06-03T02:15:51

module NBody
  source "/home/me/Entwicklung/Modules/Micron/testcases/NBody.mic"
  import line 10 MathL
  type line 19 Body = struct 
    line 20 x: float64
    y: float64
    z: float64
    line 21 vx: float64
    vy: float64
    vz: float64
    line 22 mass: float64
  end
  type line 26 _$1 = array 5 of Body
  type line 25 NBodySystem = struct 
    line 26 bodies: _$1
  end
  type line 29 _$2 = pointer to Body
  procedure Body_getX(me: _$2):float64
  begin
    line 31
    ldarg_0
    ldfld Body.x
    ret
    line 32
  end Body_getX
  type line 34 _$3 = pointer to Body
  procedure Body_getY(me: _$3):float64
  begin
    line 36
    ldarg_0
    ldfld Body.y
    ret
    line 37
  end Body_getY
  type line 39 _$4 = pointer to Body
  procedure Body_getZ(me: _$4):float64
  begin
    line 41
    ldarg_0
    ldfld Body.z
    ret
    line 42
  end Body_getZ
  type line 44 _$5 = pointer to Body
  procedure Body_getVX(me: _$5):float64
  begin
    line 46
    ldarg_0
    ldfld Body.vx
    ret
    line 47
  end Body_getVX
  type line 49 _$6 = pointer to Body
  procedure Body_getVY(me: _$6):float64
  begin
    line 51
    ldarg_0
    ldfld Body.vy
    ret
    line 52
  end Body_getVY
  type line 54 _$7 = pointer to Body
  procedure Body_getVZ(me: _$7):float64
  begin
    line 56
    ldarg_0
    ldfld Body.vz
    ret
    line 57
  end Body_getVZ
  type line 59 _$8 = pointer to Body
  procedure Body_getMass(me: _$8):float64
  begin
    line 61
    ldarg_0
    ldfld Body.mass
    ret
    line 62
  end Body_getMass
  type line 64 _$9 = pointer to Body
  procedure Body_setX(me: _$9; x: float64)
  begin
    line 66
    ldarg_0
    ldarg_1
    stfld Body.x
    line 67
  end Body_setX
  type line 69 _$10 = pointer to Body
  procedure Body_setY(me: _$10; y: float64)
  begin
    line 71
    ldarg_0
    ldarg_1
    stfld Body.y
    line 72
  end Body_setY
  type line 74 _$11* = pointer to Body
  procedure Body_setZ(me: _$11; z: float64)
  begin
    line 76
    ldarg_0
    ldarg_1
    stfld Body.z
    line 77
  end Body_setZ
  type line 79 _$12 = pointer to Body
  procedure Body_setVX(me: _$12; vx: float64)
  begin
    line 81
    ldarg_0
    ldarg_1
    stfld Body.vx
    line 82
  end Body_setVX
  type line 84 _$13* = pointer to Body
  procedure Body_setVY(me: _$13; vy: float64)
  begin
    line 86
    ldarg_0
    ldarg_1
    stfld Body.vy
    line 87
  end Body_setVY
  type line 89 _$14* = pointer to Body
  procedure Body_setVZ(me: _$14; vz: float64)
  begin
    line 91
    ldarg_0
    ldarg_1
    stfld Body.vz
    line 92
  end Body_setVZ
  type line 94 _$15 = pointer to Body
  procedure Body_offsetMomentum(me: _$15; px: float64; py: float64; pz: float64)
  begin
    line 96
    ldarg_0
    ldc_r8 0
    ldarg_1
    ldc_r8 39.478417604357432
    div
    sub
    stfld Body.vx
    line 97
    ldarg_0
    ldc_r8 0
    ldarg_2
    ldc_r8 39.478417604357432
    div
    sub
    stfld Body.vy
    line 98
    ldarg_0
    ldc_r8 0
    ldarg_3
    ldc_r8 39.478417604357432
    div
    sub
    stfld Body.vz
    line 99
  end Body_offsetMomentum
  procedure line 101 Body_create(x: float64; y: float64; z: float64; vx: float64; vy: float64; vz: float64; mass: float64):Body
  var line 103 res: Body; 
  begin
    line 105
    ldloca_s 0
    ldarg_0
    stfld Body.x
    line 106
    ldloca_s 0
    ldarg_1
    stfld Body.y
    line 107
    ldloca_s 0
    ldarg_2
    stfld Body.z
    line 108
    ldloca_s 0
    ldarg_3
    ldc_r8 365.24000000000001
    mul
    stfld Body.vx
    line 109
    ldloca_s 0
    ldarg_s 4
    ldc_r8 365.24000000000001
    mul
    stfld Body.vy
    line 110
    ldloca_s 0
    ldarg_s 5
    ldc_r8 365.24000000000001
    mul
    stfld Body.vz
    line 111
    ldloca_s 0
    ldarg_s 6
    ldc_r8 39.478417604357432
    mul
    stfld Body.mass
    line 112
    ldloc_0
    ret
    line 113
  end Body_create
  procedure line 115 Body_jupiter():Body
  begin
    line 118
    ldc_r8 4.8414314424647209
    line 119
    ldc_r8 -1.1603200440274284
    line 120
    ldc_r8 -0.10362204447112311
    line 121
    ldc_r8 0.0016600766427440369
    line 122
    ldc_r8 0.0076990111841974043
    line 123
    ldc_r8 -6.9046001697206302e-05
    line 124
    ldc_r8 0.00095479193842432661
    line 117
    call Body_create
    ret
    line 125
  end Body_jupiter
  procedure line 127 Body_saturn():Body
  begin
    line 130
    ldc_r8 8.3433667182445799
    line 131
    ldc_r8 4.1247985641243048
    line 132
    ldc_r8 -0.40352341711432138
    line 133
    ldc_r8 -0.0027674251072686241
    line 134
    ldc_r8 0.0049985280123491724
    line 135
    ldc_r8 2.3041729757376393e-05
    line 136
    ldc_r8 0.00028588598066613081
    line 129
    call Body_create
    ret
    line 137
  end Body_saturn
  procedure line 139 Body_uranus():Body
  begin
    line 142
    ldc_r8 12.894369562139131
    line 143
    ldc_r8 -15.111151401698631
    line 144
    ldc_r8 -0.22330757889265573
    line 145
    ldc_r8 0.0029646013756476162
    line 146
    ldc_r8 0.0023784717395948095
    line 147
    ldc_r8 -2.9658956854023756e-05
    line 148
    ldc_r8 4.366244043351563e-05
    line 141
    call Body_create
    ret
    line 149
  end Body_uranus
  procedure line 151 Body_neptune():Body
  begin
    line 154
    ldc_r8 15.379697114850917
    line 155
    ldc_r8 -25.919314609987964
    line 156
    ldc_r8 0.17925877295037118
    line 157
    ldc_r8 0.0026806777249038932
    line 158
    ldc_r8 0.001628241700382423
    line 159
    ldc_r8 -9.5159225451971587e-05
    line 160
    ldc_r8 5.1513890204661145e-05
    line 153
    call Body_create
    ret
    line 161
  end Body_neptune
  procedure line 163 Body_sun():Body
  begin
    line 165
    ldc_r4 0
    conv_r8
    ldc_r4 0
    conv_r8
    ldc_r4 0
    conv_r8
    ldc_r4 0
    conv_r8
    ldc_r4 0
    conv_r8
    ldc_r4 0
    conv_r8
    ldc_r4 1
    conv_r8
    call Body_create
    ret
    line 166
  end Body_sun
  type line 168 _$16 = pointer to Body
  procedure test(b: _$16)
  begin
    line 170
    ldarg_0
    ldfld Body.mass
    call MIC$!printF8
    ldc_i4_s 10
    call MIC$!printCh
    line 171
  end test
  type line 173 _$17 = pointer to NBodySystem
  type line 177 _$18 = pointer to Body
  type line 191 _$20 = pointer to Body
  type line 197 _$21 = pointer to Body
  procedure NBodySystem_init(me: _$17)
  var line 175 px: float64; py: float64; pz: float64; line 176 i: int32; b: _$18; line 178 tmp: float64; _$19: int32; 
  begin
    line 180
    ldarg_0
    ldflda NBodySystem.bodies
    ldc_i4_0
    call Body_sun
    stelem Body
    line 181
    ldarg_0
    ldflda NBodySystem.bodies
    ldc_i4_1
    call Body_jupiter
    stelem Body
    line 182
    ldarg_0
    ldflda NBodySystem.bodies
    ldc_i4_2
    call Body_saturn
    stelem Body
    line 183
    ldarg_0
    ldflda NBodySystem.bodies
    ldc_i4_3
    call Body_uranus
    stelem Body
    line 184
    ldarg_0
    ldflda NBodySystem.bodies
    ldc_i4_4
    call Body_neptune
    stelem Body
    line 186
    ldc_r4 0
    conv_r8
    stloc_0
    line 187
    ldc_r4 0
    conv_r8
    stloc_1
    line 188
    ldc_r4 0
    conv_r8
    stloc_2
    line 190
    ldc_i4_0
    stloc_3
    ldc_i4_4
    stloc_s 6
    while
      ldloc_3
      ldloc_s 6
      cgt
      ldc_i4_0
      ceq
    do
      ldarg_0
      ldflda NBodySystem.bodies
      ldloc_3
      ldelema Body
      stloc_s 4
      line 192
      ldloc_0
      ldloc_s 4
      call Body_getVX
      ldloc_s 4
      call Body_getMass
      mul
      add
      stloc_0
      line 193
      ldloc_1
      ldloc_s 4
      call Body_getVY
      ldloc_s 4
      call Body_getMass
      mul
      add
      stloc_1
      line 194
      ldloc_2
      ldloc_s 4
      call Body_getVZ
      ldloc_s 4
      call Body_getMass
      mul
      add
      stloc_2
      line 190
      ldloc_3
      ldc_i4_1
      add
      stloc_3
      line 195
    end
    ldarg_0
    ldflda NBodySystem.bodies
    ldc_i4_0
    ldelema Body
    ldloc_0
    ldloc_1
    ldloc_2
    call Body_offsetMomentum
    line 198
  end NBodySystem_init
  type line 200 _$22 = pointer to NBodySystem
  type line 203 _$23 = pointer to Body
  type line 208 _$25 = pointer to Body
  type line 210 _$27 = pointer to Body
  type line 230 _$29 = pointer to Body
  procedure NBodySystem_advance(me: _$22; dt: float64)
  var line 202 i: int32; j: int32; iBody: _$23; jBody: _$23; line 204 dx: float64; dy: float64; dz: float64; line 205 dSquared: float64; distance: float64; mag: float64; _$24: int32; _$26: int32; _$28: int32; 
  begin
    line 207
    ldc_i4_0
    stloc_0
    ldc_i4_4
    stloc_s 10
    while
      ldloc_0
      ldloc_s 10
      cgt
      ldc_i4_0
      ceq
    do
      ldarg_0
      ldflda NBodySystem.bodies
      ldloc_0
      ldelema Body
      stloc_2
      line 209
      ldloc_0
      ldc_i4_1
      add
      stloc_1
      ldc_i4_4
      stloc_s 11
      while
        ldloc_1
        ldloc_s 11
        cgt
        ldc_i4_0
        ceq
      do
        ldarg_0
        ldflda NBodySystem.bodies
        ldloc_1
        ldelema Body
        stloc_3
        line 211
        ldloc_2
        call Body_getX
        ldloc_3
        call Body_getX
        sub
        stloc_s 4
        line 212
        ldloc_2
        call Body_getY
        ldloc_3
        call Body_getY
        sub
        stloc_s 5
        line 213
        ldloc_2
        call Body_getZ
        ldloc_3
        call Body_getZ
        sub
        stloc_s 6
        line 215
        ldloc_s 4
        ldloc_s 4
        mul
        ldloc_s 5
        ldloc_s 5
        mul
        add
        ldloc_s 6
        ldloc_s 6
        mul
        add
        stloc_s 7
        line 216
        ldloc_s 7
        call MathL!sqrt
        stloc_s 8
        line 217
        ldarg_1
        ldloc_s 7
        ldloc_s 8
        mul
        div
        stloc_s 9
        line 219
        ldloc_2
        ldloc_2
        call Body_getVX
        ldloc_s 4
        ldloc_3
        call Body_getMass
        mul
        ldloc_s 9
        mul
        sub
        call Body_setVX
        line 220
        ldloc_2
        ldloc_2
        call Body_getVY
        ldloc_s 5
        ldloc_3
        call Body_getMass
        mul
        ldloc_s 9
        mul
        sub
        call Body_setVY
        line 221
        ldloc_2
        ldloc_2
        call Body_getVZ
        ldloc_s 6
        ldloc_3
        call Body_getMass
        mul
        ldloc_s 9
        mul
        sub
        call Body_setVZ
        line 223
        ldloc_3
        ldloc_3
        call Body_getVX
        ldloc_s 4
        ldloc_2
        call Body_getMass
        mul
        ldloc_s 9
        mul
        add
        call Body_setVX
        line 224
        ldloc_3
        ldloc_3
        call Body_getVY
        ldloc_s 5
        ldloc_2
        call Body_getMass
        mul
        ldloc_s 9
        mul
        add
        call Body_setVY
        line 225
        ldloc_3
        ldloc_3
        call Body_getVZ
        ldloc_s 6
        ldloc_2
        call Body_getMass
        mul
        ldloc_s 9
        mul
        add
        call Body_setVZ
        line 209
        ldloc_1
        ldc_i4_1
        add
        stloc_1
        line 226
      end
      line 207
      ldloc_0
      ldc_i4_1
      add
      stloc_0
      line 227
    end
    line 229
    ldc_i4_0
    stloc_0
    ldc_i4_4
    stloc_s 12
    while
      ldloc_0
      ldloc_s 12
      cgt
      ldc_i4_0
      ceq
    do
      ldarg_0
      ldflda NBodySystem.bodies
      ldloc_0
      ldelema Body
      stloc_2
      line 231
      ldloc_2
      ldloc_2
      call Body_getX
      ldarg_1
      ldloc_2
      call Body_getVX
      mul
      add
      call Body_setX
      line 232
      ldloc_2
      ldloc_2
      call Body_getY
      ldarg_1
      ldloc_2
      call Body_getVY
      mul
      add
      call Body_setY
      line 233
      ldloc_2
      ldloc_2
      call Body_getZ
      ldarg_1
      ldloc_2
      call Body_getVZ
      mul
      add
      call Body_setZ
      line 229
      ldloc_0
      ldc_i4_1
      add
      stloc_0
      line 234
    end
    line 235
  end NBodySystem_advance
  type line 237 _$30 = pointer to NBodySystem
  type line 241 _$31 = pointer to Body
  type line 246 _$33 = pointer to Body
  type line 252 _$35 = pointer to Body
  procedure NBodySystem_energy(me: _$30):float64
  var line 239 e: float64; line 240 i: int32; j: int32; iBody: _$31; jBody: _$31; line 242 dx: float64; dy: float64; dz: float64; distance: float64; _$32: int32; _$34: int32; 
  begin
    line 244
    ldc_r4 0
    conv_r8
    stloc_0
    line 245
    ldc_i4_0
    stloc_1
    ldc_i4_4
    stloc_s 9
    while
      ldloc_1
      ldloc_s 9
      cgt
      ldc_i4_0
      ceq
    do
      ldarg_0
      ldflda NBodySystem.bodies
      ldloc_1
      ldelema Body
      stloc_3
      line 247
      ldloc_0
      ldc_r8 0.5
      ldloc_3
      call Body_getMass
      mul
      line 248
      ldloc_3
      call Body_getVX
      ldloc_3
      call Body_getVX
      mul
      line 249
      ldloc_3
      call Body_getVY
      ldloc_3
      call Body_getVY
      mul
      line 248
      add
      line 250
      ldloc_3
      call Body_getVZ
      ldloc_3
      call Body_getVZ
      mul
      line 249
      add
      line 248
      mul
      line 247
      add
      stloc_0
      line 251
      ldloc_1
      ldc_i4_1
      add
      stloc_2
      ldc_i4_4
      stloc_s 10
      while
        ldloc_2
        ldloc_s 10
        cgt
        ldc_i4_0
        ceq
      do
        ldarg_0
        ldflda NBodySystem.bodies
        ldloc_2
        ldelema Body
        stloc_s 4
        line 253
        ldloc_3
        call Body_getX
        ldloc_s 4
        call Body_getX
        sub
        stloc_s 5
        line 254
        ldloc_3
        call Body_getY
        ldloc_s 4
        call Body_getY
        sub
        stloc_s 6
        line 255
        ldloc_3
        call Body_getZ
        ldloc_s 4
        call Body_getZ
        sub
        stloc_s 7
        line 256
        ldloc_s 5
        ldloc_s 5
        mul
        ldloc_s 6
        ldloc_s 6
        mul
        add
        ldloc_s 7
        ldloc_s 7
        mul
        add
        call MathL!sqrt
        stloc_s 8
        line 257
        ldloc_0
        ldloc_3
        call Body_getMass
        ldloc_s 4
        call Body_getMass
        mul
        ldloc_s 8
        div
        sub
        stloc_0
        line 251
        ldloc_2
        ldc_i4_1
        add
        stloc_2
        line 258
      end
      line 245
      ldloc_1
      ldc_i4_1
      add
      stloc_1
      line 259
    end
    line 260
    ldloc_0
    ret
    line 261
  end NBodySystem_energy
  procedure line 263 verifyResult2(resultValue: float64; innerIterations: int32):bool
  begin
    line 267
    if
      ldarg_1
      ldc_i4 250000
      ceq
    then
      line 268
      ldarg_0
      abs
      ldc_r8 0.1690859889909308
      sub
      ldc_r8 5.0000000000000002e-14
      clt
      ret
      line 269
    end
    line 270
    if
      ldarg_1
      ldc_i4_1
      ceq
    then
      line 271
      ldarg_0
      abs
      ldc_r8 0.16907495402506745
      sub
      ldc_r8 5.0000000000000002e-14
      clt
      ret
      line 272
    end
    line 275
    ldstr "No verification result for "
    call MIC$!printStr
    ldarg_1
    conv_i8
    call MIC$!printI8
    ldstr " found"
    call MIC$!printStr
    ldc_i4_s 10
    call MIC$!printCh
    line 276
    ldstr "Result is: "
    call MIC$!printStr
    ldarg_0
    call MIC$!printF8
    ldc_i4_s 10
    call MIC$!printCh
    line 278
    ldc_i4_0
    ret
    line 279
  end verifyResult2
  type line 286 _$36 = pointer to NBodySystem
  type line 288 _$38 = pointer to NBodySystem
  type line 290 _$39 = pointer to NBodySystem
  procedure line 281 run(innerIterations: int32):bool
  var line 283 system: NBodySystem; line 284 i: int32; _$37: int32; 
  begin
    ldloca_s 0
    call NBodySystem_init
    line 287
    ldc_i4_0
    stloc_1
    ldarg_0
    ldc_i4_1
    sub
    stloc_2
    while
      ldloc_1
      ldloc_2
      cgt
      ldc_i4_0
      ceq
    do
      ldloca_s 0
      ldc_r4 0.0099999997764825821
      conv_r8
      call NBodySystem_advance
      ldloc_1
      ldc_i4_1
      add
      stloc_1
      line 289
    end
    ldloca_s 0
    call NBodySystem_energy
    ldarg_0
    call verifyResult2
    ret
    line 291
  end run
  procedure line 293 begin$() init 
  begin
    line 294
    ldstr "NBody begin"
    call MIC$!printStr
    ldc_i4_s 10
    call MIC$!printCh
    line 296
    ldc_i4_1
    call run
    ldc_i4 296
    ldstr "/home/me/Entwicklung/Modules/Micron/testcases/NBody.mic"
    call MIC$!assert
    line 298
    ldstr "NBody end"
    call MIC$!printStr
    ldc_i4_s 10
    call MIC$!printCh
    line 299
  end begin$
end line 293 NBody
