module Procs9

	type
	    CallSign = record value: integer end
		Vector3D = record x,y,z: longreal end
		Aircraft = record callsign: CallSign; position: Vector3D; i : integer end
		
	proc test(): Aircraft
		var a: Aircraft
	begin
		 a.callsign.value := 5
		 a.position.x := 6.0
		 a.position.y := 7.0
		 a.position.z := 8.0
		 return a
	end test
	
	proc test2(a: Aircraft)
	begin
		assert( a.position.z = 4.0 )
		a.position.z := 5.0
	end test2
	
	proc test3(const a: ^Aircraft)
	begin
		assert( a.position.z = 4.0 )
		// a.i := 3 // cannot modify read-only desig
		// a.position.z := 5	 // is an error
	end test3

	proc test4(a: ^Aircraft)
	begin
		assert( a.position.z = 4.0 )
		a.position.z := 6.0
	end test4

	var a1, a2: Aircraft
	
begin
	 println("Procs9 start")
	 a1.callsign.value := 1
	 a1.position.x := 2.0
	 a1.position.y := 3.0
	 a1.position.z := 4.0
	 a2 := a1
	 assert( a2.position.z = a1.position.z )
	 a2.position.z := 10.0
	 assert( a2.position.z # a1.position.z )

	 test2(a1)
	 assert( a1.position.z = 4.0 )
	 
	 test4(@a1)
	 assert( a1.position.z = 6.0)
	 a1.position.z := 4.0
	 
	 test3(@a1)
	 assert( a1.position.z = 4.0)
	 
	 a2 := test()
	 assert( a2.position.z = 8.0 )
	 
	 println("Procs9 done")
end Procs9
