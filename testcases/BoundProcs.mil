// Generated by MicCompiler  on 2025-04-15T01:21:53

module BoundProcs
  type T0 = object 
  end
  procedure T0.hello(SELF: _$1; str: _$3)
  begin
    ldarg_1
    call MIC$!printStr
    ldstr " from T0"
    call MIC$!printStr
    ldc_i4_s 10
    call MIC$!printCh
  end hello
  type T1 = object (T0)
    i: int32
  end
  procedure T1.hello(SELF: _$4; str: _$6)
  begin
    ldarg_1
    call MIC$!printStr
    ldstr " from T1"
    call MIC$!printStr
    ldc_i4_s 10
    call MIC$!printCh
  end hello
  type TT = object 
  end
  type _$1 = pointer to T0
  type _$2 = array of char
  type _$3 = pointer to _$2
  type _$4 = pointer to T1
  type _$5 = array of char
  type _$6 = pointer to _$5
  type _$7 = array of char
  type _$8 = pointer to _$7
  type _$9 = proc^(str: _$8)
  var p: _$9
  var t0: T0
  var t1: T1
  type _$10 = pointer to T1
  var t1p: _$10
  type _$11 = pointer to T0
  var tp: _$11
  type _$12 = array 4 of T1
  var a: _$12
  type _$13 = array 4 of T1
  type _$14 = pointer to _$13
  var ap: _$14
  type _$15 = array of T1
  type _$16 = pointer to _$15
  var app: _$16
  var n: uint32
  type _$17 = pointer to T1
  procedure begin$() init 
  begin
    ldvara t1
    ldflda T1.i
    ldc_i4_s 33
    stind_i4
    ldvara t1
    ldfld T1.i
    conv_i8
    call MIC$!printI8
    ldc_i4_s 10
    call MIC$!printCh
    ldvara p
    ldvara t0
    ldmeth T0.hello
    stind_ipp
    ldstr "hello"
    ldvar p
    callvi _$9
    ldvara t1
    ldstr "gooday"
    callvirt T1.hello
    ldvara t1p
    ldvara t1
    stind_ip
    ldvar t1p
    ldstr "as well"
    callvirt T1.hello
    ldvara p
    ldvara t1
    ldmeth T1.hello
    stind_ipp
    ldstr "bonjour"
    ldvar p
    callvi _$9
    ldvara a
    ldc_i4_1
    ldelema T1
    ldstr "bon giorno"
    callvirt T1.hello
    ldvara t1p
    newobj T1
    stind_ip
    ldvara tp
    ldvar t1p
    stind_ip
    ldvar tp
    ldstr "gugus"
    callvirt T0.hello
    ldvara p
    ldvar tp
    ldmeth T0.hello
    stind_ipp
    ldstr "ave"
    ldvar p
    callvi _$9
    ldvar t1p
    free
    ldvara ap
    ldc_i4_4
    newarr T1
    stind_ip
    ldvar ap
    ldc_i4_2
    ldelema T1
    ldstr "ap"
    callvirt T1.hello
    ldvar ap
    free
    ldvara n
    ldc_i4_4
    stind_i4
    ldvara app
    ldvar n
    newarr T1
    stind_ip
    ldvar app
    ldc_i4_3
    ldelema T1
    ldstr "app"
    callvirt T1.hello
    ldvar app
    free
  end begin$
end BoundProcs

