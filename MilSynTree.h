#ifndef __MIL_SYNTREE__
#define __MIL_SYNTREE__
// This file was automatically generated by EbnfStudio; don't modify it!

#include <Micron/MilTokenType.h>
#include <Micron/MilToken.h>
#include <QList>

namespace Mil {

	struct SynTree {
		enum ParserRule {
			R_First = TT_Max + 1,
			R_ArrayType,
			R_ConstExpression,
			R_Expression,
			R_FPSection,
			R_FieldList,
			R_FormalParameters,
			R_IdentList,
			R_IfThenElse,
			R_ImportList,
			R_ImportPath,
			R_LocalDeclaration,
			R_Loop,
			R_MetaActuals,
			R_MetaParams,
			R_MetaSection,
			R_Mil,
			R_NamedType,
			R_PointerType,
			R_ProcedureDeclaration,
			R_ProcedureType,
			R_RepeatUntil,
			R_ReturnType,
			R_StatementSequence,
			R_StructUnionType,
			R_Switch,
			R_TypeDeclaration,
			R_VariableDeclaration,
			R_WhileDo,
			R_comment_,
			R_component,
			R_component_list,
			R_constructor,
			R_hexstringdelim_,
			R_identdef,
			R_import,
			R_integer,
			R_length,
			R_module,
			R_qualident,
			R_trident,
			R_type,
			R_Last
		};
		SynTree(quint16 r = Tok_Invalid, const Token& = Token() );
		SynTree(const Token& t ):d_tok(t){}
		~SynTree() { foreach(SynTree* n, d_children) delete n; }

		static const char* rToStr( quint16 r );

		Mil::Token d_tok;
		QList<SynTree*> d_children;
	};

}
#endif // __MIL_SYNTREE__
