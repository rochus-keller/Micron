#ifndef __MIL_TOKENTYPE__
#define __MIL_TOKENTYPE__
// This file was automatically generated by EbnfStudio; don't modify it!


#include <QByteArray>

namespace Mil {
	enum TokenType {
		Tok_Invalid = 0,

		TT_Literals,
		Tok_Dlr,
		Tok_Lpar,
		Tok_Latt,
		Tok_Rpar,
		Tok_Star,
		Tok_Ratt,
		Tok_Plus,
		Tok_Comma,
		Tok_Minus,
		Tok_Dot,
		Tok_2Dot,
		Tok_2Slash,
		Tok_Colon,
		Tok_ColonEq,
		Tok_Semi,
		Tok_Eq,
		Tok_Lbrack,
		Tok_Rbrack,
		Tok_Hat,

		TT_Keywords,
		Tok_ARRAY,
		Tok_BEGIN,
		Tok_CASE,
		Tok_DO,
		Tok_ELSE,
		Tok_END,
		Tok_IF,
		Tok_IMPORT,
		Tok_INLINE,
		Tok_LOOP,
		Tok_MODULE,
		Tok_OF,
		Tok_POINTER,
		Tok_PROC,
		Tok_PROCEDURE,
		Tok_REPEAT,
		Tok_STRUCT,
		Tok_SWITCH,
		Tok_THEN,
		Tok_TO,
		Tok_TYPE,
		Tok_UNION,
		Tok_UNTIL,
		Tok_VAR,
		Tok_WHILE,
		Tok_add,
		Tok_and,
		Tok_call,
		Tok_calli,
		Tok_castptr,
		Tok_ceq,
		Tok_cgt,
		Tok_cgt_un,
		Tok_clt,
		Tok_clt_un,
		Tok_conv_i1,
		Tok_conv_i2,
		Tok_conv_i4,
		Tok_conv_i8,
		Tok_conv_ip,
		Tok_conv_r4,
		Tok_conv_r8,
		Tok_conv_u1,
		Tok_conv_u2,
		Tok_conv_u4,
		Tok_conv_u8,
		Tok_disp,
		Tok_div,
		Tok_dup,
		Tok_exit,
		Tok_goto,
		Tok_label,
		Tok_ldarg,
		Tok_ldarg_0,
		Tok_ldarg_1,
		Tok_ldarg_2,
		Tok_ldarg_3,
		Tok_ldarg_s,
		Tok_ldarga,
		Tok_ldarga_s,
		Tok_ldc_i4,
		Tok_ldc_i4_0,
		Tok_ldc_i4_1,
		Tok_ldc_i4_2,
		Tok_ldc_i4_3,
		Tok_ldc_i4_4,
		Tok_ldc_i4_5,
		Tok_ldc_i4_6,
		Tok_ldc_i4_7,
		Tok_ldc_i4_8,
		Tok_ldc_i4_m1,
		Tok_ldc_i4_s,
		Tok_ldc_i8,
		Tok_ldc_r4,
		Tok_ldc_r8,
		Tok_ldelem,
		Tok_ldelem_i1,
		Tok_ldelem_i2,
		Tok_ldelem_i4,
		Tok_ldelem_i8,
		Tok_ldelem_ip,
		Tok_ldelem_r4,
		Tok_ldelem_r8,
		Tok_ldelem_u1,
		Tok_ldelem_u2,
		Tok_ldelem_u4,
		Tok_ldelem_u8,
		Tok_ldelema,
		Tok_ldfld,
		Tok_ldflda,
		Tok_ldftn,
		Tok_ldind_i1,
		Tok_ldind_i2,
		Tok_ldind_i4,
		Tok_ldind_i8,
		Tok_ldind_ip,
		Tok_ldind_r4,
		Tok_ldind_r8,
		Tok_ldind_u1,
		Tok_ldind_u2,
		Tok_ldind_u4,
		Tok_ldind_u8,
		Tok_ldloc,
		Tok_ldloc_0,
		Tok_ldloc_1,
		Tok_ldloc_2,
		Tok_ldloc_3,
		Tok_ldloc_s,
		Tok_ldloca,
		Tok_ldloca_s,
		Tok_ldnull,
		Tok_ldobj,
		Tok_ldproc,
		Tok_ldstr,
		Tok_ldvar,
		Tok_ldvara,
		Tok_line,
		Tok_mul,
		Tok_neg,
		Tok_newarr,
		Tok_newobj,
		Tok_newvla,
		Tok_not,
		Tok_or,
		Tok_pop,
		Tok_rem,
		Tok_ret,
		Tok_shl,
		Tok_shr,
		Tok_shr_un,
		Tok_starg,
		Tok_starg_s,
		Tok_stelem,
		Tok_stelem_i1,
		Tok_stelem_i2,
		Tok_stelem_i4,
		Tok_stelem_i8,
		Tok_stelem_ip,
		Tok_stelem_r4,
		Tok_stelem_r8,
		Tok_stfld,
		Tok_stind_i1,
		Tok_stind_i2,
		Tok_stind_i4,
		Tok_stind_i8,
		Tok_stind_ip,
		Tok_stind_r4,
		Tok_stind_r8,
		Tok_stloc,
		Tok_stloc_0,
		Tok_stloc_1,
		Tok_stloc_2,
		Tok_stloc_3,
		Tok_stloc_s,
		Tok_stobj,
		Tok_stvar,
		Tok_sub,
		Tok_xor,

		TT_Specials,
		Tok_ident,
		Tok_unsigned,
		Tok_real,
		Tok_string,
		Tok_hexstring,
		Tok_Comment,
		Tok_Eof,

		TT_MaxToken,

		TT_Max
	};

	const char* tokenTypeString( int ); // Pretty with punctuation chars
	const char* tokenTypeName( int ); // Just the names without punctuation chars
	bool tokenTypeIsLiteral( int );
	bool tokenTypeIsKeyword( int );
	bool tokenTypeIsSpecial( int );
	TokenType tokenTypeFromString( const QByteArray& str, int* pos = 0 );
	TokenType tokenTypeFromString( const char* str, quint32 len, int* pos = 0 );
}
#endif // __MIL_TOKENTYPE__
